---

- name: Ensure OpenSSl and libssl are the latest versions
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=latest
  with_items:
    - openssl
    - libssl-dev
    - libssl-doc
  tags: packages

- name: Install base packages
  apt: name={{ item }} update_cache={{ update_apt_cache }} force=yes state=installed
  with_items:
    - build-essential
    - git
    - gettext
    - libxml2-dev
    - libxslt1-dev
    - python3-dev
    - python3-pip
    - python3-pycurl
    - supervisor
    - vim
    - zip
  tags: packages

- name: Install image libaries for Pillow
  apt: name={{ item }} update_cache={{ update_apt_cache }} force=yes state=installed
  with_items:
    - libjpeg62
    - libjpeg-dev
    - libfreetype6
    - libfreetype6-dev
    - zlib1g-dev
  tags: packages

- name: Install virtualenv
  pip: name={{ item }} executable=pip3
  with_items:
    - virtualenv
  tags: packages

- name: Install sWSGI System-wide
  pip: name={{ item }} executable=pip3
  with_items:
    - uwsgi
  tags: packages

- name: Create the application user
  when: set_up_application_user
  user: name={{ application_user }} state=present shell="/bin/bash"

- name: Create the application group
  group: name={{ application_group }} system=yes state=present

- name: Add the application user to the application group
  user: name={{ application_user }} group={{ application_group }} state=present

- name: Check if splunk file is already downloaded
  stat:
    path: /home/{{ application_user }}/splunk-7.2.4-8a94541dcfac-Linux-x86_64.tgz
  register: splunk_downloaded
  tags:
    - splunk

- name: Download Splunk File
  become: yes
  become_user: '{{ application_user }}'
  when: splunk_downloaded.stat.exists == False
  get_url:
    url: '{{ splunk_tar_url }}'
    dest: /home/{{ application_user }}/
    owner: '{{ application_user }}'
  tags:
    - splunk

- name: Make sure opt folder exists
  file:
    path: /home/{{ application_user }}/opt
    state: directory
    owner: '{{ application_user }}'
  tags:
    - splunk

- name: Extract splunk tar file
  become: yes
  become_user: '{{ application_user }}'
  unarchive:
    src: /home/{{ application_user }}/splunk-7.2.4-8a94541dcfac-Linux-x86_64.tgz
    dest: /home/{{ application_user }}/opt/
    remote_src: yes
  tags:
    - splunk

- name: Create splunk admin credentials
  become: yes
  become_user: '{{ application_user }}'
  template:
    src: splunk_admin.j2
    dest:  /home/{{ application_user }}/opt/splunk/etc/system/local/user-seed.conf
  tags:
    - splunk

- name: Start splunk
  become: yes
  become_user: '{{ application_user }}'
  command: chdir=/home/{{ application_user }}/opt/splunk/bin {{ item }}
  with_items:
    - ./splunk stop
    - ./splunk start --accept-license --answer-yes
  tags:
    - splunk
...